generator client { provider = "prisma-client-js" }

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role { STUDENT TEACHER }

model User {
  id           String   @id @default(cuid())
  name         String
  email        String   @unique
  passwordHash String
  role         Role     @default(STUDENT)
  points       Int      @default(0)
  results      Result[]
  badges       UserBadge[]
  createdAt    DateTime @default(now())
}

model Lesson {
  id        String   @id @default(cuid())
  title     String
  subject   String
  grade     String
  summary   String
  termsEn   String[]
  quiz      Quiz?
  createdAt DateTime @default(now())
}

model Quiz {
  id        String   @id @default(cuid())
  lessonId  String   @unique
  lesson    Lesson   @relation(fields: [lessonId], references: [id])
  items     QuizItem[]
  createdAt DateTime @default(now())
}

enum QuizType { MCQ TRUE_FALSE }

model QuizItem {
  id        String   @id @default(cuid())
  quizId    String
  quiz      Quiz     @relation(fields: [quizId], references: [id])
  type      QuizType
  question  String
  choices   String[]
  answer    String
  order     Int      @default(0)
}

model Result {
  id        String   @id @default(cuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  quizId    String
  quiz      Quiz     @relation(fields: [quizId], references: [id])
  score     Int
  timeSec   Int
  createdAt DateTime @default(now())
}

model Badge {
  id        String   @id @default(cuid())
  code      String   @unique
  label     String
  createdAt DateTime @default(now())
}

model UserBadge {
  id        String   @id @default(cuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  badgeId   String
  badge     Badge    @relation(fields: [badgeId], references: [id])
  createdAt DateTime @default(now())
  @@unique([userId, badgeId])
}
